2.判断是否包含符合正则条件的敏感词
   var i =str.search(/正则/)
   查找str中第一个符合正则要求的关键词位置
   返回值：关键词位置
   未找到返回:-1
     问题：正则默认都区分大小写
     解决：在第二个/后加 i ====ignore

     问题：只能找一个，且返回位置，无法返回关键词内容
3.获取所有关键词的内容
   var kwords=str.match(/正则/i)
   查找的是str所有关键词的内容
   返回值：关键词数组
   问题：所有的正则默认只查找第一个关键词
   解决：在第二个/后加 g global
   只能找关键词内容，无法返回每一个关键词位置
    注意**如果找不到，会返回null
             如果一个函数可能会返回null值，就必须先验证不是null
          再使用

4.既找到关键词内容又找到关键词位置
   reg.exec()

替换：
1.简单替换
2.复杂替换
   简单替换：
     将所有关键词，替换为统一内容
     str =str.replace(/正则/ig,'替换值')
    更简单替换：
       如果关键词为固定的：
       str.replace('关键词','替换值')
   2.复杂替换
     根据每个关键词的不同，动态选择不同的新值替换
     str=str.replace(
        /正则/ig,
     function(kword){
      每找一个关键词，就自动调用该function
      kword会自动获得本次找到的一个关键词
          return
      根据kword的不同，返回不同的新值
	}
     )
替换的衍生：
  即删除，讲关键词替换为''

切割：
   1.简单切割：按照固定的分隔符，分割字符串
   语法：var substrs =str.split('分隔符')
   固定套路：
      打散字符串为字符数组
      var chars =str.split('')
复杂切割：
       如果分隔符是变化的，可以用正则切割
       var substrs =str.split(/正则/)
