   正则表达式对象：RegExp
  专门保存一条正则表达式，并提供正则表达式执行验证和查找操作的API对象
 何时使用：
    只要在JS中使用正则表达式，都要先创建RegExp对象
 运用场景：
    1.验证字符串格式（正则表达式是唯一作格式验证的）
    2.实现既查找所有关键词的内容又查找所有关键词的位置
  var arr =reg.exec(str)
  在str中找下一个关键词的内容和位置
    返回值：数组：[
       “0”本次找到的关键词内容
       “index”：本次找到的关键词位置
]
如果找不到，返回null
   在reg对象中，有一个隐藏属性   .lastIndex：记录下次开始查找的位置

 如何创建：两中方法
     1.直接创建
        var reg=/正则/ig
	如果正则表达式不需要动态生成（不需要更新）
     2.用new
        var reg=new RegExp('正则','ig')
      专门用于动态生成的正则表达式

API
   1.验证字符串格式
      var bool=reg.test(str)
      返回值为bool类型
     用reg检查str是否符合正则表达式的格式要求
问题：
      正则--默认只要找到符合条件的内容，即使只有一部分也返回true
解决：
      在今后，凡是验证，必须前面加^，后边加$
      表示的是从头到尾，完整匹配
  
Math
   定义：专门保存算数计算的常量，并提供算数计算的API
   何时：只要在进行数学计算时
   如何使用：
            创建不能new
	    所有的API通过Math直接调用
    API：
       1.取整：3种情况
           上取整：只要小数部分超过，就取下一个整数
	                Math.ceil(num)
	   下取整：舍弃小数部分
	                Math.floor(num)
		vs	paseInt(str)
		num为数字,str为字符串,且paseInt可以去掉数字后的非数字字符(单位)
	   四舍五入取整：整数后一位小数，够5进1
	        1.      Math.round(num)
		2.	.toFixed(2)
                    1--只能取整
		    2--按任意小数四舍五入
2.乘方和开平方
     Math.pow(底数，幂)
     Math.sqrt(n)
3.最大值和最小值
     Math.max(值1...值2...)
     Math.min(值1...值2...)
    问题：max与min默认是不支持在数组中找到最大值和最小值的
    解决：
              Math.max(...arr)

随机数
   0<=Math.random()<1